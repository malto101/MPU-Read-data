#include <Arduino.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>


// Timer variables
long lastTime = 0;  
long lastTimeTemperature = 0;
long lastTimeAcc = 0;
long gyroDelay = 10;
long temperatureDelay = 1000;
long accelerometerDelay = 200;

// Create a sensor object
Adafruit_MPU6050 mpu;

sensors_event_t a, g, temp;

float gyroX, gyroY, gyroZ;
float accX, accY, accZ;
float temperature;

//Gyroscope sensor deviation
float gyroXerror = 0.07;
float gyroYerror = 0.03;
float gyroZerror = 0.01;

// Init MPU6050
void initMPU(){
  if (!mpu.begin()) 
  {
    Serial.println("Failed to find MPU6050 chip");
    while (1) 
    {
      delay(10);
    }
  }
  Serial.println("MPU6050 Found!");
}


void getGyroReadings()
{
  mpu.getEvent(&a, &g, &temp);

  float gyroX_temp = g.gyro.x;
  if(abs(gyroX_temp) > gyroXerror)  
  {
    gyroX += gyroX_temp/50.00;
  }
  
  float gyroY_temp = g.gyro.y;
  if(abs(gyroY_temp) > gyroYerror) 
  {
    gyroY += gyroY_temp/70.00;
  }

  float gyroZ_temp = g.gyro.z;
  if(abs(gyroZ_temp) > gyroZerror) 
  {
    gyroZ += gyroZ_temp/70.00;
  }
  
  
  Serial.print(gyroX_temp);
  Serial.print(gyroY_temp);
  Serial.print(gyroZ_temp);
  Serial.print("\t");
}


void getAccReadings() 
{
  mpu.getEvent(&a, &g, &temp);
  // Get current acceleration values
  accX = a.acceleration.x;
  accY = a.acceleration.y;
  accZ = a.acceleration.z;
  Serial.print(accX);
  Serial.print(accY);
  Serial.print(accZ);
}

void getTemperature()
{
  mpu.getEvent(&a, &g, &temp);
  temperature = temp.temperature;
  Serial.println(temperature);
}

void setup() {
  Serial.begin(115200);
  initMPU();
}

void loop() {
  if ((millis() - lastTime) > gyroDelay) 
  {
    // Send Events to the Web Server with the Sensor Readings
    getGyroReadings();
    lastTime = millis();
  }
  if ((millis() - lastTimeAcc) > accelerometerDelay)
  {
    // Send Events to the Web Server with the Sensor Readings
    getAccReadings();
    lastTimeAcc = millis();
  }
  if ((millis() - lastTimeTemperature) > temperatureDelay) 
  {
    // Send Events to the Web Server with the Sensor Readings
    getTemperature();
    lastTimeTemperature = millis();
  }
}
